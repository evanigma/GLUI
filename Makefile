#############################################################################
# Makefile for building: GLUI
# Generated by qmake (2.01a) (Qt 4.5.1) on: Thu Aug 13 14:22:47 2009
# Project:  GLUI.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile GLUI.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I. -I. -IWave -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lSDL -lSDL_mixer -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = GLWidget.cpp \
		main.cpp \
		MainWindow.cpp \
		Player.cpp \
		Wave/Image.cpp \
		Wave/NoteType.cpp \
		Wave/Pixel.cpp \
		Wave/Song.cpp \
		Wave/Timer.cpp \
		Wave/Turtle.cpp \
		Wave/Utility.cpp \
		Wave/Wave.cpp moc_GLWidget.cpp \
		moc_MainWindow.cpp \
		moc_Player.cpp \
		qrc_GLUI.cpp
OBJECTS       = GLWidget.o \
		main.o \
		MainWindow.o \
		Player.o \
		Image.o \
		NoteType.o \
		Pixel.o \
		Song.o \
		Timer.o \
		Turtle.o \
		Utility.o \
		Wave.o \
		moc_GLWidget.o \
		moc_MainWindow.o \
		moc_Player.o \
		qrc_GLUI.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		GLUI.pro
QMAKE_TARGET  = GLUI
DESTDIR       = 
TARGET        = GLUI

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: GLUI.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile GLUI.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile GLUI.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/GLUI1.0.0 || $(MKDIR) .tmp/GLUI1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/GLUI1.0.0/ && $(COPY_FILE) --parents GLWidget.h MainWindow.h Player.h Wave/Image.h Wave/NoteType.h Wave/Pixel.h Wave/Song.h Wave/Timer.h Wave/Turtle.h Wave/Utility.h Wave/Wave.h .tmp/GLUI1.0.0/ && $(COPY_FILE) --parents GLUI.qrc GLUI.qrc .tmp/GLUI1.0.0/ && $(COPY_FILE) --parents GLWidget.cpp main.cpp MainWindow.cpp Player.cpp Wave/Image.cpp Wave/NoteType.cpp Wave/Pixel.cpp Wave/Song.cpp Wave/Timer.cpp Wave/Turtle.cpp Wave/Utility.cpp Wave/Wave.cpp .tmp/GLUI1.0.0/ && (cd `dirname .tmp/GLUI1.0.0` && $(TAR) GLUI1.0.0.tar GLUI1.0.0 && $(COMPRESS) GLUI1.0.0.tar) && $(MOVE) `dirname .tmp/GLUI1.0.0`/GLUI1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/GLUI1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_GLWidget.cpp moc_MainWindow.cpp moc_Player.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_GLWidget.cpp moc_MainWindow.cpp moc_Player.cpp
moc_GLWidget.cpp: Wave/Wave.h \
		Wave/Song.h \
		Wave/NoteType.h \
		Wave/Timer.h \
		GLWidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) GLWidget.h -o moc_GLWidget.cpp

moc_MainWindow.cpp: GLWidget.h \
		Wave/Wave.h \
		Wave/Song.h \
		Wave/NoteType.h \
		Wave/Timer.h \
		Player.h \
		MainWindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) MainWindow.h -o moc_MainWindow.cpp

moc_Player.cpp: Wave/Wave.h \
		Wave/Song.h \
		Wave/NoteType.h \
		Player.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Player.h -o moc_Player.cpp

compiler_rcc_make_all: qrc_GLUI.cpp qrc_GLUI.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_GLUI.cpp qrc_GLUI.cpp
qrc_GLUI.cpp: GLUI.qrc \
		Icon/GLUI.png
	/usr/bin/rcc -name GLUI GLUI.qrc -o qrc_GLUI.cpp

qrc_GLUI.cpp: GLUI.qrc \
		Icon/GLUI.png
	/usr/bin/rcc -name GLUI GLUI.qrc -o qrc_GLUI.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

GLWidget.o: GLWidget.cpp GLWidget.h \
		Wave/Wave.h \
		Wave/Song.h \
		Wave/NoteType.h \
		Wave/Timer.h \
		Wave/Utility.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLWidget.o GLWidget.cpp

main.o: main.cpp MainWindow.h \
		GLWidget.h \
		Wave/Wave.h \
		Wave/Song.h \
		Wave/NoteType.h \
		Wave/Timer.h \
		Player.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

MainWindow.o: MainWindow.cpp MainWindow.h \
		GLWidget.h \
		Wave/Wave.h \
		Wave/Song.h \
		Wave/NoteType.h \
		Wave/Timer.h \
		Player.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MainWindow.o MainWindow.cpp

Player.o: Player.cpp Player.h \
		Wave/Wave.h \
		Wave/Song.h \
		Wave/NoteType.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Player.o Player.cpp

Image.o: Wave/Image.cpp Wave/Image.h \
		Wave/Pixel.h \
		Wave/Utility.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Image.o Wave/Image.cpp

NoteType.o: Wave/NoteType.cpp Wave/NoteType.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NoteType.o Wave/NoteType.cpp

Pixel.o: Wave/Pixel.cpp Wave/Pixel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Pixel.o Wave/Pixel.cpp

Song.o: Wave/Song.cpp Wave/Song.h \
		Wave/NoteType.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Song.o Wave/Song.cpp

Timer.o: Wave/Timer.cpp Wave/Timer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Timer.o Wave/Timer.cpp

Turtle.o: Wave/Turtle.cpp Wave/Turtle.h \
		Wave/Image.h \
		Wave/Pixel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Turtle.o Wave/Turtle.cpp

Utility.o: Wave/Utility.cpp Wave/Utility.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Utility.o Wave/Utility.cpp

Wave.o: Wave/Wave.cpp Wave/Wave.h \
		Wave/Song.h \
		Wave/NoteType.h \
		Wave/Utility.h \
		Wave/Turtle.h \
		Wave/Image.h \
		Wave/Pixel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Wave.o Wave/Wave.cpp

moc_GLWidget.o: moc_GLWidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GLWidget.o moc_GLWidget.cpp

moc_MainWindow.o: moc_MainWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MainWindow.o moc_MainWindow.cpp

moc_Player.o: moc_Player.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Player.o moc_Player.cpp

qrc_GLUI.o: qrc_GLUI.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_GLUI.o qrc_GLUI.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

